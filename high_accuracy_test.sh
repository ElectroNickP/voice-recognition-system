#!/bin/bash

# –¢–µ—Å—Ç —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è

VOICE_MODEL="./piper/ru_RU-irina-medium.onnx"
PIPER_BIN="./piper/piper"
WHISPER_BIN="./whisper.cpp/build/bin/whisper-cli"
WHISPER_MODEL="./whisper.cpp/models/ggml-medium.bin"  # –ë–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å

# –ú–∞—Å—Å–∏–≤ —Ñ—Ä–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
PHRASES=(
    "–ü—Ä–∏–≤–µ—Ç"
    "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä"
    "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä —Ç–µ—Å—Ç"
    "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä —ç—Ç–æ —Ç–µ—Å—Ç"
    "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä —ç—Ç–æ —Ç–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
)

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "=== –¢–ï–°–¢ –° –ü–û–í–´–®–ï–ù–ù–û–ô –¢–û–ß–ù–û–°–¢–¨–Æ ==="
echo "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–µ–ª—å: ggml-medium.bin"
echo ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ
echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ...${NC}"
amixer sset Capture 25% 2>/dev/null  # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
amixer sset Master 85% 2>/dev/null   # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
echo ""

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
TOTAL_TESTS=0
SUCCESSFUL_TESTS=0
PARTIAL_TESTS=0
FAILED_TESTS=0

# –§–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
RESULTS_FILE="high_accuracy_results.txt"
echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê –° –ü–û–í–´–®–ï–ù–ù–û–ô –¢–û–ß–ù–û–°–¢–¨–Æ ===" > "$RESULTS_FILE"
echo "–î–∞—Ç–∞: $(date)" >> "$RESULTS_FILE"
echo "–ú–æ–¥–µ–ª—å: ggml-medium.bin" >> "$RESULTS_FILE"
echo "" >> "$RESULTS_FILE"

for i in {0..4}; do
    TEST_NUM=$((i + 1))
    TEST_PHRASE="${PHRASES[$i]}"
    
    echo -e "${BLUE}=== –¢–ï–°–¢ ${TEST_NUM}/5 ===${NC}"
    echo -e "${BLUE}–§—Ä–∞–∑–∞: '$TEST_PHRASE'${NC}"
    echo ""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ
    SYNTH_FILE="/tmp/high_acc_synth_${TEST_NUM}.wav"
    $PIPER_BIN --model $VOICE_MODEL --output_file "$SYNTH_FILE" <<< "$TEST_PHRASE"
    
    # –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    if command -v sox &> /dev/null; then
        sox "$SYNTH_FILE" "/tmp/high_acc_synth_norm_${TEST_NUM}.wav" norm -2  # –ú–µ–Ω—å—à–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
        mv "/tmp/high_acc_synth_norm_${TEST_NUM}.wav" "$SYNTH_FILE"
    fi
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏
    DUR=$(sox "$SYNTH_FILE" -n stat 2>&1 | grep "Length" | awk '{print $3}')
    DUR_INT=$(printf "%.0f" "$DUR")
    REC_SEC=$((DUR_INT + 2))  # –ë–æ–ª—å—à–µ –∑–∞–ø–∞—Å–∞
    
    echo "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${DUR} —Å–µ–∫, –∑–∞–ø–∏—Å—å: ${REC_SEC} —Å–µ–∫"
    
    # –ò–¥–µ–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    REC_FILE="/tmp/high_acc_rec_${TEST_NUM}.wav"
    
    echo "–ó–∞–ø–∏—Å—ã–≤–∞—é –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–∂—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ..."
    (sox -d -r 16000 -c 1 -b 16 "$REC_FILE" trim 0 $REC_SEC gain -4 norm -2) &
    REC_PID=$!
    
    paplay "$SYNTH_FILE" &
    PLAY_PID=$!
    
    wait $REC_PID
    wait $PLAY_PID
    
    echo "–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    echo "–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏:"
    paplay "$REC_FILE"
    echo ""
    
    # –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    echo "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é..."
    RECOG_TEXT=$($WHISPER_BIN -m $WHISPER_MODEL -l ru -f "$REC_FILE" -otxt -nt --no-timestamps --print-colors --print-special 2>/dev/null | sed 's/\[.*\]//g' | xargs)
    echo "–†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: '$RECOG_TEXT'"
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    if [[ "${RECOG_TEXT,,}" == *"${TEST_PHRASE,,}"* ]]; then
        echo -e "${GREEN}‚úÖ –ü–û–õ–ù–´–ô –£–°–ü–ï–•${NC}"
        SUCCESSFUL_TESTS=$((SUCCESSFUL_TESTS + 1))
        RESULT="–ü–û–õ–ù–´–ô –£–°–ü–ï–•"
    elif [[ "${RECOG_TEXT,,}" == *"–ø—Ä–∏–≤–µ—Ç"* ]] || [[ "${RECOG_TEXT,,}" == *"–º–∏—Ä"* ]] || [[ "${RECOG_TEXT,,}" == *"—Ç–µ—Å—Ç"* ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•${NC}"
        PARTIAL_TESTS=$((PARTIAL_TESTS + 1))
        RESULT="–ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•"
    elif [[ -n "$RECOG_TEXT" ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è –†–ê–°–ü–û–ó–ù–ê–ù –î–†–£–ì–û–ô –¢–ï–ö–°–¢${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        RESULT="–î–†–£–ì–û–ô –¢–ï–ö–°–¢"
    else
        echo -e "${RED}‚ùå –ù–ï –†–ê–°–ü–û–ó–ù–ê–ù–û${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        RESULT="–ù–ï –†–ê–°–ü–û–ó–ù–ê–ù–û"
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    echo "–¢–µ—Å—Ç $TEST_NUM: '$TEST_PHRASE' -> '$RECOG_TEXT' ($RESULT)" >> "$RESULTS_FILE"
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    cp "$SYNTH_FILE" "./high_acc_synth_${TEST_NUM}.wav"
    cp "$REC_FILE" "./high_acc_rec_${TEST_NUM}.wav"
    
    echo "–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: high_acc_synth_${TEST_NUM}.wav, high_acc_rec_${TEST_NUM}.wav"
    echo ""
    echo "---"
    echo ""
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    rm -f "$SYNTH_FILE" "$REC_FILE"
    
    # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    if [[ $i -lt 4 ]]; then
        echo "–ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º..."
        sleep 3
        echo ""
    fi
done

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo -e "${BLUE}=== –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===${NC}"
echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–ü–æ–ª–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤: $SUCCESSFUL_TESTS${NC}"
echo -e "${YELLOW}–ß–∞—Å—Ç–∏—á–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤: $PARTIAL_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á: $FAILED_TESTS${NC}"

SUCCESS_RATE=$((SUCCESSFUL_TESTS * 100 / TOTAL_TESTS))
PARTIAL_RATE=$((PARTIAL_TESTS * 100 / TOTAL_TESTS))
FAILED_RATE=$((FAILED_TESTS * 100 / TOTAL_TESTS))

echo ""
echo "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏:"
echo -e "${GREEN}–ü–æ–ª–Ω—ã–π —É—Å–ø–µ—Ö: ${SUCCESS_RATE}%${NC}"
echo -e "${YELLOW}–ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö: ${PARTIAL_RATE}%${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–∏: ${FAILED_RATE}%${NC}"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–∞–π–ª
echo "" >> "$RESULTS_FILE"
echo "=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===" >> "$RESULTS_FILE"
echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS" >> "$RESULTS_FILE"
echo "–ü–æ–ª–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤: $SUCCESSFUL_TESTS" >> "$RESULTS_FILE"
echo "–ß–∞—Å—Ç–∏—á–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤: $PARTIAL_TESTS" >> "$RESULTS_FILE"
echo "–ù–µ—É–¥–∞—á: $FAILED_TESTS" >> "$RESULTS_FILE"
echo "–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–Ω–æ–≥–æ —É—Å–ø–µ—Ö–∞: ${SUCCESS_RATE}%" >> "$RESULTS_FILE"
echo "–ü—Ä–æ—Ü–µ–Ω—Ç —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ —É—Å–ø–µ—Ö–∞: ${PARTIAL_RATE}%" >> "$RESULTS_FILE"
echo "–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ—É–¥–∞—á: ${FAILED_RATE}%" >> "$RESULTS_FILE"

echo ""
echo -e "${BLUE}=== –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï ===${NC}"
if [[ $SUCCESS_RATE -ge 80 ]]; then
    echo -e "${GREEN}üéâ –û–¢–õ–ò–ß–ù–û! –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
elif [[ $SUCCESS_RATE -ge 60 ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –•–û–†–û–®–û! –¢–æ—á–Ω–æ—Å—Ç—å —É–ª—É—á—à–∏–ª–∞—Å—å${NC}"
elif [[ $SUCCESS_RATE -ge 40 ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –ï—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è${NC}"
else
    echo -e "${RED}‚ùå –¢–æ—á–Ω–æ—Å—Ç—å –Ω–µ —É–ª—É—á—à–∏–ª–∞—Å—å${NC}"
fi

echo ""
echo "–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_FILE"
echo "–í—Å–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" 